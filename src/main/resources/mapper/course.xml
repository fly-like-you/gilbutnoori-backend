<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.gilbut.domain.course.mapper.CourseMapper">
    <!-- ResultMap 정의 -->
    <resultMap id="CourseResultMap" type="Course">
        <!-- Course 필드 매핑 -->
        <id property="id" column="course_id"/>
        <result property="name" column="course_name"/>
        <result property="dist" column="course_dist"/>
        <result property="turnaround" column="course_turnaround"/>
        <result property="level" column="course_level"/>
        <result property="cycle" column="course_cycle"/>
        <result property="summary" column="course_summary"/>
        <result property="detail" column="course_detail"/>
        <result property="travelPoint" column="course_travel_point"/>
        <result property="travelerInfo" column="course_traveler_info"/>
        <result property="sigun" column="course_sigun"/>
        <result property="createdAt" column="course_created_at"/>
        <result property="updatedAt" column="course_updated_at"/>
        <result property="roadOrBike" column="course_road_or_bike"/>

        <association property="route" column="course_route_id" javaType="Route" resultMap="RouteResultMap"/>
    </resultMap>


    <!-- Route 필드 매핑 -->
    <resultMap id="RouteResultMap" type="Route">
        <id property="id" column="route_id"/>
        <result property="name" column="route_name"/>
        <result property="summary" column="route_summary"/>
        <result property="detail" column="route_detail"/>
        <result property="roadOrBike" column="route_road_or_bike"/>
        <result property="createdAt" column="route_created_at"/>
        <result property="updatedAt" column="route_updated_at"/>
    </resultMap>

    <!-- 쿼리 시작 -->
    <select id="courseList" resultMap="CourseResultMap">
        SELECT
        <include refid="CourseColumns" />,
        <include refid="RouteColumns" />
        FROM
        courses c
        INNER JOIN
        routes r
        ON
        c.route_id = r.id
        <if test="sort">
            <trim prefix="ORDER BY">
                <foreach item="order" collection="sort" separator=", ">
                    ${order.property} ${order.direction}
                </foreach>
            </trim>
        </if>
        LIMIT #{pageable.offset}, #{pageable.pageSize}

    </select>

    <select id="courseDetail" resultMap="CourseResultMap">
        SELECT
        <include refid="CourseColumns" />,
        <include refid="RouteColumns" />
        FROM
        courses c
        INNER JOIN
        routes r
        ON
        c.route_id = r.id
        WHERE c.id = #{courseId}

    </select>

    <select id="routeList" resultMap="RouteResultMap">
        SELECT
        <include refid="RouteColumns" />
        FROM Routes r
        <include refid="pagination"/>
    </select>

    <select id="countCourses" resultType="int">
        SELECT COUNT(*) AS course_count
        FROM courses c
    </select>

    <select id="countRoutes" resultType="int">
        SELECT COUNT(*) AS route_count
        FROM Routes r
    </select>

    <select id="countCoursesBy" resultType="int">
        SELECT COUNT(*)
        FROM Courses c
        WHERE 1 = 1
        <include refid="searchConditions"/>
    </select>

    <select id="courseSearchBy" resultMap="CourseResultMap">
        SELECT
        <include refid="CourseColumns" />,
        <include refid="RouteColumns" />
        FROM courses c
        INNER JOIN routes r
        ON c.route_id = r.id
        WHERE 1=1
        <include refid="searchConditions"/>
        <include refid="pagination"/>

    </select>

    <sql id="CourseColumns">
    c.id AS course_id,
    c.name AS course_name,
    c.dist AS course_dist,
    c.turnaround AS course_turnaround,
    c.level AS course_level,
    c.cycle AS course_cycle,
    c.summary AS course_summary,
    c.detail AS course_detail,
    c.travel_point AS course_travel_point,
    c.traveler_info AS course_traveler_info,
    c.sigun AS course_sigun,
    c.created_at AS course_created_at,
    c.updated_at AS course_updated_at,
    c.road_or_bike AS course_road_or_bike
    </sql>

    <sql id="RouteColumns">
    r.id AS route_id,
    r.name AS route_name,
    r.summary AS route_summary,
    r.detail AS route_detail,
    r.road_or_bike AS route_road_or_bike,
    r.created_at AS route_created_at,
    r.updated_at AS route_updated_at
    </sql>

    <!-- 페이지네이션 -->
    <sql id="pagination">
        <if test="pageable.sort.sorted">
            <trim prefix="ORDER BY">
                <foreach item="order" collection="pageable.sort" separator=", ">
                    #{order.property} #{order.direction}
                </foreach>
            </trim>
        </if>
        LIMIT #{pageable.offset}, #{pageable.pageSize}
    </sql>

    <!-- 공통 WHERE 조건 -->
    <sql id="searchConditions">
        <if test="criteria.routeId != null">
            AND c.route_id = #{criteria.routeId}
        </if>
        <if test="criteria.dist != null">
            AND c.dist = #{criteria.dist}
        </if>
        <if test="criteria.turnaround != null">
            AND c.turnaround = #{criteria.turnaround}
        </if>
        <if test="criteria.level != null">
            AND c.level = #{criteria.level}
        </if>
        <if test="criteria.cycle != null">
            AND c.cycle = #{criteria.cycle}
        </if>
        <if test="criteria.sidoCode != null">
            AND c.sido_code = #{criteria.sidoCode}
        </if>
        <if test="criteria.gugunCode != null">
            AND c.gugun_code = #{criteria.gugunCode}
        </if>
    </sql>

</mapper>